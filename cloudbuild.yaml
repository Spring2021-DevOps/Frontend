steps:

#BUILD DOCKER IMAGE WITH LATEST TAG
# - name: 'gcr.io/cloud-builders/docker'
#   args: ['build', '-t', 'gcr.io/$PROJECT_ID/uber-react:latest', '.']
#   timeout: 500s

- name: 'gcr.io/cloud-builders/docker'
  args: ['build',
         '--build-arg',
         'REACT_APP_API_SERVICE_URL=aa1f1319b43a64c5388b2505b86edfe8-1002164639.us-east-1.elb.amazonaws.com',
         '-t',
         'gcr.io/$PROJECT_ID/uber-react:latest',
         '.']

#PUSH DOCKER IMAGE TO CONTAINER REGISTRY
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/$PROJECT_ID/uber-react:latest']

#CREATE APPLICATION LOAD BALANCER FOR FRONTEND
- name: 'gcr.io/cloud-builders/kubectl'
  args: ['apply', '-f', 'deployments/frontend-alb.yaml']
  env:
  - 'CLOUDSDK_COMPUTE_REGION=us-east1'
  - 'CLOUDSDK_CONTAINER_CLUSTER=gkecluster'

#CREATE DEPLOYMENT FOR FRONTEND
- name: 'gcr.io/cloud-builders/kubectl'
  args: ['apply', '-f', 'deployments/frontend-deployment.yaml']
  env:
  - 'CLOUDSDK_COMPUTE_REGION=us-east1'
  - 'CLOUDSDK_CONTAINER_CLUSTER=gkecluster'

